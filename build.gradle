plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'idea'
    id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacoco{
    toolVersion = "0.8.7"
}

dependencies {

    // Database
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // JPA + Hibernate 포함
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

    // bcrypt
    implementation 'at.favre.lib:bcrypt:0.10.2'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'


    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

//    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

}

compileJava {
    options.annotationProcessorGeneratedSourcesDirectory = file('src/main/generated')
}

tasks.test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    dependsOn tasks.test
    reports {
        html.required.set(true)
        csv.required.set(true)
        xml.required.set(false)
    }
}

tasks.jacocoTestCoverageVerification {
    // 전체 커버리지 30% 미만이면 실패
    violationRules {
        rule {
            limit {
                minimum = 0.30.toBigDecimal()
            }
        }
    }
}

tasks.check {
    dependsOn tasks.jacocoTestCoverageVerification
}

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

idea {
    module {
        sourceDirs += file("$buildDir/generated/sources/annotationProcessor/java/main")
        generatedSourceDirs += file("$buildDir/generated/sources/annotationProcessor/java/main")
    }
}
